{"version":3,"sources":["file:///E:/xisle-dev/xisle/hugo-site/themes/xisle/assets/js/image-slider.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () =\u003e {\r\n    const sliderTrack = document.querySelector('.slider-track');\r\n    const sliderImages = document.querySelectorAll('.slider-image');\r\n    const leftArrow = document.querySelector('.slider-arrow-left');\r\n    const rightArrow = document.querySelector('.slider-arrow-right');\r\n    const dotsContainer = document.querySelector('.slider-dots');\r\n    const imageWidth = 300; // Must match the CSS width of .slider-image\r\n\r\n    // Function to update active dot\r\n    const updateActiveDot = () =\u003e {\r\n        const currentScroll = sliderTrack.scrollLeft;\r\n        const index = Math.round(currentScroll / imageWidth);\r\n        document.querySelectorAll('.dot').forEach((dot, i) =\u003e {\r\n            if (i === index) {\r\n                dot.classList.add('active');\r\n            } else {\r\n                dot.classList.remove('active');\r\n            }\r\n        });\r\n    };\r\n\r\n    // Initial active dot setup\r\n    updateActiveDot();\r\n\r\n    // Event listener for scrolling to update dots\r\n    sliderTrack.addEventListener('scroll', () =\u003e {\r\n        updateActiveDot();\r\n    });\r\n\r\n    // Left arrow click\r\n    leftArrow.addEventListener('click', () =\u003e {\r\n        sliderTrack.scrollBy({\r\n            left: -imageWidth,\r\n            behavior: 'smooth'\r\n        });\r\n    });\r\n\r\n    // Right arrow click\r\n    rightArrow.addEventListener('click', () =\u003e {\r\n        sliderTrack.scrollBy({\r\n            left: imageWidth,\r\n            behavior: 'smooth'\r\n        });\r\n    });\r\n\r\n    // Dot navigation\r\n    if (dotsContainer) {\r\n        dotsContainer.addEventListener('click', (event) =\u003e {\r\n            if (event.target.classList.contains('dot')) {\r\n                const index = parseInt(event.target.dataset.index);\r\n                sliderTrack.scrollTo({\r\n                    left: index * imageWidth,\r\n                    behavior: 'smooth'\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    // Image click to center\r\n    sliderImages.forEach(image =\u003e {\r\n        image.addEventListener('click', (event) =\u003e {\r\n            const imageIndex = parseInt(event.target.dataset.index);\r\n            const scrollLeftPosition = imageIndex * imageWidth;\r\n\r\n            // Calculate offset to center the image\r\n            const viewportCenter = sliderTrack.offsetWidth / 2;\r\n            const imageCenter = imageWidth / 2;\r\n            const scrollOffset = scrollLeftPosition - viewportCenter + imageCenter;\r\n\r\n            sliderTrack.scrollTo({\r\n                left: scrollOffset,\r\n                behavior: 'smooth'\r\n            });\r\n        });\r\n    });\r\n});"],"mappings":";;AAAA,WAAS,iBAAiB,oBAAoB,MAAM;AAChD,UAAM,cAAc,SAAS,cAAc,eAAe;AAC1D,UAAM,eAAe,SAAS,iBAAiB,eAAe;AAC9D,UAAM,YAAY,SAAS,cAAc,oBAAoB;AAC7D,UAAM,aAAa,SAAS,cAAc,qBAAqB;AAC/D,UAAM,gBAAgB,SAAS,cAAc,cAAc;AAC3D,UAAM,aAAa;AAGnB,UAAM,kBAAkB,MAAM;AAC1B,YAAM,gBAAgB,YAAY;AAClC,YAAM,QAAQ,KAAK,MAAM,gBAAgB,UAAU;AACnD,eAAS,iBAAiB,MAAM,EAAE,QAAQ,CAAC,KAAK,MAAM;AAClD,YAAI,MAAM,OAAO;AACb,cAAI,UAAU,IAAI,QAAQ;AAAA,QAC9B,OAAO;AACH,cAAI,UAAU,OAAO,QAAQ;AAAA,QACjC;AAAA,MACJ,CAAC;AAAA,IACL;AAGA,oBAAgB;AAGhB,gBAAY,iBAAiB,UAAU,MAAM;AACzC,sBAAgB;AAAA,IACpB,CAAC;AAGD,cAAU,iBAAiB,SAAS,MAAM;AACtC,kBAAY,SAAS;AAAA,QACjB,MAAM,CAAC;AAAA,QACP,UAAU;AAAA,MACd,CAAC;AAAA,IACL,CAAC;AAGD,eAAW,iBAAiB,SAAS,MAAM;AACvC,kBAAY,SAAS;AAAA,QACjB,MAAM;AAAA,QACN,UAAU;AAAA,MACd,CAAC;AAAA,IACL,CAAC;AAGD,QAAI,eAAe;AACf,oBAAc,iBAAiB,SAAS,CAAC,UAAU;AAC/C,YAAI,MAAM,OAAO,UAAU,SAAS,KAAK,GAAG;AACxC,gBAAM,QAAQ,SAAS,MAAM,OAAO,QAAQ,KAAK;AACjD,sBAAY,SAAS;AAAA,YACjB,MAAM,QAAQ;AAAA,YACd,UAAU;AAAA,UACd,CAAC;AAAA,QACL;AAAA,MACJ,CAAC;AAAA,IACL;AAGA,iBAAa,QAAQ,WAAS;AAC1B,YAAM,iBAAiB,SAAS,CAAC,UAAU;AACvC,cAAM,aAAa,SAAS,MAAM,OAAO,QAAQ,KAAK;AACtD,cAAM,qBAAqB,aAAa;AAGxC,cAAM,iBAAiB,YAAY,cAAc;AACjD,cAAM,cAAc,aAAa;AACjC,cAAM,eAAe,qBAAqB,iBAAiB;AAE3D,oBAAY,SAAS;AAAA,UACjB,MAAM;AAAA,UACN,UAAU;AAAA,QACd,CAAC;AAAA,MACL,CAAC;AAAA,IACL,CAAC;AAAA,EACL,CAAC;","names":[]}